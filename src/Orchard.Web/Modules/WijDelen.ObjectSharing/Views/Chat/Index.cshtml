@model WijDelen.ObjectSharing.ViewModels.ChatViewModel

@{
    Script.Include("Chat/index.js").AtFoot();
}

@{
    if (WorkContext.CurrentUser.Id == Model.RequestingUserId) {
        Layout.Title = T("Your request for (a) {0}", Model.ObjectDescription).ToString();
    }
    else {
        Layout.Title = T("{0} is looking for (a) {1}", Model.RequestingUserName, Model.ObjectDescription).ToString();
    }
}

<h1>@Layout.Title</h1>

@if (WorkContext.CurrentUser.Id == Model.RequestingUserId) {
    <h5>
        @T("{0} has (a) {1} for you", Model.ConfirmingUserName, Model.ObjectDescription)
    </h5>
}

<div class="chat">
    @foreach (var chatMessageViewModel in Model.Messages) {
        var chatBubbleClass = "chatbubble chatbubble-otheruser";
        if (WorkContext.CurrentUser.Id == chatMessageViewModel.UserId) {
            chatBubbleClass = "chatbubble chatbubble-currentuser";
        }

        <div class="chatmessage">
            <p class="@chatBubbleClass">@chatMessageViewModel.Message</p>
        </div>
    }
</div>

@if (!Model.IsForBlockedObjectRequest && !Model.IsStopped) {
    using (Html.BeginFormAntiForgeryPost(Url.Action("Index", "Chat", new {Area = "WijDelen.ObjectSharing"}), FormMethod.Post, new {enctype = "multipart/form-data", id = "newMessageForm"})) {
        @Html.HiddenFor(m => m.ChatId)
        <fieldset>
            @Html.TextAreaFor(m => m.NewMessage, new {placeholder = T("Write a message here.")})
            @Html.ValidationMessageFor(m => m.NewMessage)
        </fieldset>

        <button>@T("Submit")</button>
    }
}