@using System.Linq;
@using System.Web.Routing;
@{
    Script.Require("jQuery").AtHead();
    Script.Require("jQueryUI_Resizable").AtHead();
    Script.Include("RouteView.js").AtHead();
    Style.Include("RouteView.css");
    Style.Require("jQueryUI_Orchard");
}
<div id="routeViewToggle">
    <span id="RouteCount"></span> <span id="route-toggle-info">@T("Routes")</span><span id="openRouteIcon" class="route-icon ui-icon ui-icon-circle-triangle-s">
    </span><span id="closeRouteIcon" style="display: none" class="route-icon ui-icon ui-icon-circle-triangle-n">
    </span>
</div>
<div id="routeViewContainer" style="display: none">
    @{
        var routes = (IEnumerable<BDN.Orc.RouteDebug.Models.RouteModel>)Model.Routes;
        var current = string.Join(", ", routes.Where(x => x.RouteNode.GetRouteData(Context) != null).Select(x => T("Feature: {0}", x.Feature) +" - " + T("Url: {0}", x.Url)));
    }
    <div class="route-info">
        <span class="route-label">@T("Route hit:")</span>@current</div>
    <div class="route-info">
        <span class="route-label">@T("Filter:")</span><input class="text" type="text" id="RouteViewFilter" /></div>
    <div class="route-info">
        <span class="route-label">@T("Routes:")</span></div>
    <ul>
        @foreach (var item in routes)
        {
            <li>@T("Feature: {0}", item.Feature) - @T("Url: {0}", item.Url) - @T("Priority: {0}", item.Priority)</li>
        }
    </ul>
</div>
