@model WijDelen.UserImport.ViewModels.GroupUsersIndexViewModel
@using Orchard.Core.Shapes;
@using Orchard.Users.Models;
@using Orchard.Users.ViewModels;
@using WijDelen.UserImport.Models



@{
    var userIndex = 0;

    Layout.Title = T("Groups").ToString();
}

@using (Html.BeginFormAntiForgeryPost()) { 
    @Html.ValidationSummary()

    <fieldset class="bulk-actions">
        <label for="filterResults">@T("Filter:")</label>
        @Html.DropDownListFor(m => m.SelectedGroupId, Model.Groups.Select(x => new SelectListItem {Value = x.Id.ToString(), Text = x.Name}))
        <button type="submit" name="submit.Filter" value="@T("Filter")">@T("Filter")</button>
    </fieldset>

    <fieldset>
        <table class="items">
            <thead>
                <tr>
                    <th scope="col">@T("Email")</th>
                    <th scope="col">@T("Group")</th>
                    <th scope="col">@T("Actions")</th>
                    <th scope="col">@T("Last Login Time")</th>
                </tr>
            </thead>
            @foreach (var entry in Model.Users) { 
            <tr>
                <td>
                    @entry.User.Email
                </td>
                <td>
                    @entry.GroupName
                </td>
                <td>
                    @if (entry.GroupMembershipStatus == GroupMembershipStatus.Approved) { 
                        <img class="icon" src="@Href("~/Modules/WijDelen.UserImport/Content/groupmembership-approved.png")" alt="@T("Active")" title="@T("Account activated")" /> 
                    } else { 
                        <img class="icon" src="@Href("~/Modules/WijDelen.UserImport/Content/groupmembership-pending.png")" alt="@T("Pending")" title="@T("Account pending")" />
                    } 
                    @Html.ActionLink(T("Edit").ToString(), "Edit", new {entry.User.Id, area = "Orchard.Users", controller = "Admin"}) |
                    @Html.ActionLink(T("Delete").ToString(), "Delete", new {entry.User.Id, area = "Orchard.Users", controller = "Admin"}, new {itemprop = "RemoveUrl UnsafeUrl"}) |
                    @if (entry.User.RegistrationStatus == UserStatus.Pending) {
                        @Html.ActionLink(T("Approve").ToString(), "Approve", new {entry.User.Id, area = "Orchard.Users", controller = "Admin"}, new {itemprop = "UnsafeUrl"})
                    }
                    else {
                        @Html.ActionLink(T("Disable").ToString(), "Moderate", new {entry.User.Id, area = "Orchard.Users", controller = "Admin"}, new {itemprop = "UnsafeUrl"})
                    }
                </td>
                <td>
                    @if (entry.User.LastLoginUtc != null)
                    {
                        @Display(New.DateTimeRelative(dateTimeUtc: entry.User.LastLoginUtc))
                    }
                </td>
            </tr>
                    userIndex++;
            }
        </table>

    @Display(Model.Pager)

    </fieldset>
} 
